{"version":3,"sources":["../../api/test/test.js"],"names":["chai","use","chatHttp","expect","describe","it","done","class_","request","app","post","set","send","end","err","res","status","to","equal","body","data","include","classId","classYear","classMasterTeacher","classSection","classLevel","get","should","have","property","id","eql","put"],"mappings":";;;;AAAA;;AACA;;AACA;;AACA;;AAEAA,iBAAKC,GAAL,CAASC,oBAAT;;IACQC,M,GAAWH,gB,CAAXG,M;AACRC,QAAQ,CAAC,mBAAD,EAAsB,YAAM;AAChCC,EAAAA,EAAE,CAAC,qBAAD,EAAwB,UAACC,IAAD,EAAU;AAChC,QAAMC,MAAM,GAAG;AACX,mBAAa,MADF;AAEX,iBAAW,GAFA;AAGX,4BAAsB,MAHX;AAIX,sBAAgB,KAJL;AAKX,oBAAc;AALH,KAAf;;AAOAP,qBAAKQ,OAAL,CAAaC,iBAAb,EACKC,IADL,CACU,YADV,EAEKC,GAFL,CAES,QAFT,EAEmB,kBAFnB,EAGKC,IAHL,CAGUL,MAHV,EAIKM,GAJL,CAIS,UAACC,GAAD,EAAMC,GAAN,EAAc;AACfZ,MAAAA,MAAM,CAACY,GAAG,CAACC,MAAL,CAAN,CAAmBC,EAAnB,CAAsBC,KAAtB,CAA4B,GAA5B;AACAf,MAAAA,MAAM,CAACY,GAAG,CAACI,IAAJ,CAASC,IAAV,CAAN,CAAsBH,EAAtB,CAAyBI,OAAzB,CAAiC;AAC7BC,QAAAA,OAAO,EAAEf,MAAM,CAACe,OADa;AAE7BC,QAAAA,SAAS,EAAEhB,MAAM,CAACgB,SAFW;AAG7BC,QAAAA,kBAAkB,EAAEjB,MAAM,CAACiB,kBAHE;AAI7BC,QAAAA,YAAY,EAAElB,MAAM,CAACkB,YAJQ;AAK7BC,QAAAA,UAAU,EAAEnB,MAAM,CAACmB;AALU,OAAjC;AAOApB,MAAAA,IAAI;AAEP,KAfL;AAgBH,GAxBC,CAAF;AAyBAD,EAAAA,EAAE,CAAC,yBAAD,EAA4B,UAACC,IAAD,EAAU;AACpCN,qBAAKQ,OAAL,CAAaC,iBAAb,EACKkB,GADL,CACS,YADT,EAEKhB,GAFL,CAES,QAFT,EAEmB,kBAFnB,EAGKE,GAHL,CAGS,UAACC,GAAD,EAAMC,GAAN,EAAc;AACfZ,MAAAA,MAAM,CAACY,GAAG,CAACC,MAAL,CAAN,CAAmBC,EAAnB,CAAsBC,KAAtB,CAA4B,GAA5B;AACAH,MAAAA,GAAG,CAACI,IAAJ,CAASC,IAAT,CAAc,CAAd,EAAiBQ,MAAjB,CAAwBC,IAAxB,CAA6BC,QAA7B,CAAsC,IAAtC;AACAf,MAAAA,GAAG,CAACI,IAAJ,CAASC,IAAT,CAAc,CAAd,EAAiBQ,MAAjB,CAAwBC,IAAxB,CAA6BC,QAA7B,CAAsC,WAAtC;AACAf,MAAAA,GAAG,CAACI,IAAJ,CAASC,IAAT,CAAc,CAAd,EAAiBQ,MAAjB,CAAwBC,IAAxB,CAA6BC,QAA7B,CAAsC,SAAtC;AACAf,MAAAA,GAAG,CAACI,IAAJ,CAASC,IAAT,CAAc,CAAd,EAAiBQ,MAAjB,CAAwBC,IAAxB,CAA6BC,QAA7B,CAAsC,cAAtC;AACAf,MAAAA,GAAG,CAACI,IAAJ,CAASC,IAAT,CAAc,CAAd,EAAiBQ,MAAjB,CAAwBC,IAAxB,CAA6BC,QAA7B,CAAsC,YAAtC;AACAf,MAAAA,GAAG,CAACI,IAAJ,CAASC,IAAT,CAAc,CAAd,EAAiBQ,MAAjB,CAAwBC,IAAxB,CAA6BC,QAA7B,CAAsC,oBAAtC;AACAxB,MAAAA,IAAI;AACP,KAZL;AAaH,GAdC,CAAF;AAeAD,EAAAA,EAAE,CAAC,sBAAD,EAAyB,UAACC,IAAD,EAAU;AACjC,QAAMyB,EAAE,GAAG,CAAX;;AACA/B,qBAAKQ,OAAL,CAAaC,iBAAb,EACKkB,GADL,sBACuBI,EADvB,GAEKpB,GAFL,CAES,QAFT,EAEmB,kBAFnB,EAGKE,GAHL,CAGS,UAACC,GAAD,EAAMC,GAAN,EAAc;AACfZ,MAAAA,MAAM,CAACY,GAAG,CAACC,MAAL,CAAN,CAAmBC,EAAnB,CAAsBC,KAAtB,CAA4B,GAA5B;AACAH,MAAAA,GAAG,CAACI,IAAJ,CAASC,IAAT,CAAcQ,MAAd,CAAqBC,IAArB,CAA0BC,QAA1B,CAAmC,IAAnC;AACAf,MAAAA,GAAG,CAACI,IAAJ,CAASC,IAAT,CAAcQ,MAAd,CAAqBC,IAArB,CAA0BC,QAA1B,CAAmC,WAAnC;AACAf,MAAAA,GAAG,CAACI,IAAJ,CAASC,IAAT,CAAcQ,MAAd,CAAqBC,IAArB,CAA0BC,QAA1B,CAAmC,SAAnC;AACAf,MAAAA,GAAG,CAACI,IAAJ,CAASC,IAAT,CAAcQ,MAAd,CAAqBC,IAArB,CAA0BC,QAA1B,CAAmC,cAAnC;AACAf,MAAAA,GAAG,CAACI,IAAJ,CAASC,IAAT,CAAcQ,MAAd,CAAqBC,IAArB,CAA0BC,QAA1B,CAAmC,YAAnC;AACAf,MAAAA,GAAG,CAACI,IAAJ,CAASC,IAAT,CAAcQ,MAAd,CAAqBC,IAArB,CAA0BC,QAA1B,CAAmC,oBAAnC;AACAxB,MAAAA,IAAI;AACP,KAZL;AAaH,GAfC,CAAF;AAgBAD,EAAAA,EAAE,CAAC,0DAAD,EAA6D,UAACC,IAAD,EAAU;AACrE,QAAMyB,EAAE,GAAG,KAAX;;AACA/B,qBAAKQ,OAAL,CAAaC,iBAAb,EACKkB,GADL,sBACuBI,EADvB,GAEKpB,GAFL,CAES,QAFT,EAEmB,kBAFnB,EAGKE,GAHL,CAGS,UAACC,GAAD,EAAMC,GAAN,EAAc;AACfZ,MAAAA,MAAM,CAACY,GAAG,CAACC,MAAL,CAAN,CAAmBC,EAAnB,CAAsBC,KAAtB,CAA4B,GAA5B;AACAH,MAAAA,GAAG,CAACI,IAAJ,CAASS,MAAT,CAAgBC,IAAhB,CAAqBC,QAArB,CAA8B,SAA9B,EACKE,GADL,CACS,6CADT;AAEA1B,MAAAA,IAAI;AACP,KARL;AASH,GAXC,CAAF;AAaAD,EAAAA,EAAE,CAAC,4CAAD,EAA+C,UAACC,IAAD,EAAU;AACvD,QAAMC,MAAM,GAAG;AACX,mBAAa,MADF;AAEX,4BAAsB,MAFX;AAGX,sBAAgB,KAHL;AAIX,oBAAc;AAJH,KAAf;;AAMAP,qBAAKQ,OAAL,CAAaC,iBAAb,EACKC,IADL,CACU,YADV,EAEKC,GAFL,CAES,QAFT,EAEmB,kBAFnB,EAGKC,IAHL,CAGUL,MAHV,EAIKM,GAJL,CAIS,UAACC,GAAD,EAAMC,GAAN,EAAc;AACfZ,MAAAA,MAAM,CAACY,GAAG,CAACC,MAAL,CAAN,CAAmBC,EAAnB,CAAsBC,KAAtB,CAA4B,GAA5B;AACAH,MAAAA,GAAG,CAACI,IAAJ,CAASS,MAAT,CAAgBC,IAAhB,CAAqBC,QAArB,CAA8B,SAA9B,EACKE,GADL,CACS,2BADT;AAEA1B,MAAAA,IAAI;AAEP,KAVL;AAWH,GAlBC,CAAF;AAmBAD,EAAAA,EAAE,CAAC,yDAAD,EAA4D,UAACC,IAAD,EAAU;AACpE,QAAMyB,EAAE,GAAG,KAAX;AACA,QAAMxB,MAAM,GAAG;AACX,mBAAa,MADF;AAEX,iBAAW,IAFA;AAGX,4BAAsB,MAHX;AAIX,sBAAgB,KAJL;AAKX,oBAAc;AALH,KAAf;;AAOAP,qBAAKQ,OAAL,CAAaC,iBAAb,EACKwB,GADL,sBACuBF,EADvB,GAEKpB,GAFL,CAES,QAFT,EAEmB,kBAFnB,EAGKC,IAHL,CAGUL,MAHV,EAIKM,GAJL,CAIS,UAACC,GAAD,EAAMC,GAAN,EAAc;AACfZ,MAAAA,MAAM,CAACY,GAAG,CAACC,MAAL,CAAN,CAAmBC,EAAnB,CAAsBC,KAAtB,CAA4B,GAA5B;AACAH,MAAAA,GAAG,CAACI,IAAJ,CAASS,MAAT,CAAgBC,IAAhB,CAAqBC,QAArB,CAA8B,SAA9B,EACqBE,GADrB,CACyB,kCADzB;AAEH,KARL;;AASA1B,IAAAA,IAAI;AACP,GAnBC,CAAF;AAoBAD,EAAAA,EAAE,CAAC,mDAAD,EAAsD,UAACC,IAAD,EAAU;AAC9D,QAAMyB,EAAE,GAAG,EAAX;AACA,QAAMxB,MAAM,GAAG,EAAf;;AAGAP,qBAAKQ,OAAL,CAAaC,iBAAb,EACKwB,GADL,sBACuBF,EADvB,GAEKpB,GAFL,CAES,QAFT,EAEmB,kBAFnB,EAGKC,IAHL,CAGUL,MAHV,EAIKM,GAJL,CAIS,UAACC,GAAD,EAAMC,GAAN,EAAc;AACfZ,MAAAA,MAAM,CAACY,GAAG,CAACC,MAAL,CAAN,CAAmBC,EAAnB,CAAsBC,KAAtB,CAA4B,GAA5B;AACAH,MAAAA,GAAG,CAACI,IAAJ,CAASS,MAAT,CAAgBC,IAAhB,CAAqBC,QAArB,CAA8B,SAA9B,EACqBE,GADrB,CACyB,mBADzB;AAEH,KARL;;AASA1B,IAAAA,IAAI;AACP,GAfC,CAAF;AAgBAD,EAAAA,EAAE,CAAC,uDAAD,EAA0D,UAACC,IAAD,EAAU;AAClE,QAAMyB,EAAE,GAAG,CAAX;AACA,QAAMxB,MAAM,GAAG;AACX,mBAAa,MADF;AAEX,iBAAW,IAFA;AAGX,4BAAsB,MAHX;AAIX,sBAAgB,KAJL;AAKX,oBAAc;AALH,KAAf;;AAOAP,qBAAKQ,OAAL,CAAaC,iBAAb,EACKwB,GADL,sBACuBF,EADvB,GAEKpB,GAFL,CAES,QAFT,EAEmB,kBAFnB,EAGKC,IAHL,CAGUL,MAHV,EAIKM,GAJL,CAIS,UAACC,GAAD,EAAMC,GAAN,EAAc;AACfZ,MAAAA,MAAM,CAACY,GAAG,CAACC,MAAL,CAAN,CAAmBC,EAAnB,CAAsBC,KAAtB,CAA4B,GAA5B;AACAH,MAAAA,GAAG,CAACI,IAAJ,CAASS,MAAT,CAAgBC,IAAhB,CAAqBC,QAArB,CAA8B,SAA9B,EACqBE,GADrB,CACyB,8BADzB;AAEA7B,MAAAA,MAAM,CAACY,GAAG,CAACI,IAAJ,CAASC,IAAT,CAAcG,SAAf,CAAN,CAAgCN,EAAhC,CAAmCC,KAAnC,CAAyCX,MAAM,CAACgB,SAAhD;AACApB,MAAAA,MAAM,CAACY,GAAG,CAACI,IAAJ,CAASC,IAAT,CAAcE,OAAf,CAAN,CAA8BL,EAA9B,CAAiCC,KAAjC,CAAuCX,MAAM,CAACe,OAA9C;AACAnB,MAAAA,MAAM,CAACY,GAAG,CAACI,IAAJ,CAASC,IAAT,CAAcI,kBAAf,CAAN,CAAyCP,EAAzC,CAA4CC,KAA5C,CAAkDX,MAAM,CAACiB,kBAAzD;AACArB,MAAAA,MAAM,CAACY,GAAG,CAACI,IAAJ,CAASC,IAAT,CAAcK,YAAf,CAAN,CAAmCR,EAAnC,CAAsCC,KAAtC,CAA4CX,MAAM,CAACkB,YAAnD;AACAtB,MAAAA,MAAM,CAACY,GAAG,CAACI,IAAJ,CAASC,IAAT,CAAcM,UAAf,CAAN,CAAiCT,EAAjC,CAAoCC,KAApC,CAA0CX,MAAM,CAACmB,UAAjD;AACH,KAbL;;AAcApB,IAAAA,IAAI;AACP,GAxBC,CAAF;AAyBAD,EAAAA,EAAE,CAAC,uBAAD,EAA0B,UAACC,IAAD,EAAU;AAClC,QAAMyB,EAAE,GAAG,CAAX;;AACA/B,qBAAKQ,OAAL,CAAaC,iBAAb,iCAC0BsB,EAD1B,GAEKpB,GAFL,CAES,QAFT,EAEmB,kBAFnB,EAGKE,GAHL,CAGS,UAACC,GAAD,EAAMC,GAAN,EAAc;AACfZ,MAAAA,MAAM,CAACY,GAAG,CAACC,MAAL,CAAN,CAAmBC,EAAnB,CAAsBC,KAAtB,CAA4B,GAA5B;AACAH,MAAAA,GAAG,CAACI,IAAJ,CAASS,MAAT,CAAgBC,IAAhB,CAAqBC,QAArB,CAA8B,SAA9B,EACqBE,GADrB,yBAC0CD,EAD1C;AAGH,KARL;;AASAzB,IAAAA,IAAI;AACP,GAZC,CAAF;AAaAD,EAAAA,EAAE,CAAC,+CAAD,EAAkD,UAACC,IAAD,EAAU;AAC1D,QAAMyB,EAAE,GAAG,MAAX;;AACA/B,qBAAKQ,OAAL,CAAaC,iBAAb,iCAC0BsB,EAD1B,GAEKpB,GAFL,CAES,QAFT,EAEmB,kBAFnB,EAGKE,GAHL,CAGS,UAACC,GAAD,EAAMC,GAAN,EAAc;AACfZ,MAAAA,MAAM,CAACY,GAAG,CAACC,MAAL,CAAN,CAAmBC,EAAnB,CAAsBC,KAAtB,CAA4B,GAA5B;AACAH,MAAAA,GAAG,CAACI,IAAJ,CAASS,MAAT,CAAgBC,IAAhB,CAAqBC,QAArB,CAA8B,SAA9B,EACqBE,GADrB;AAGH,KARL;;AASA1B,IAAAA,IAAI;AACP,GAZC,CAAF;AAaAD,EAAAA,EAAE,CAAC,6CAAD,EAAgD,UAACC,IAAD,EAAU;AACxD,QAAMyB,EAAE,GAAG,CAAX;;AACA/B,qBAAKQ,OAAL,CAAaC,iBAAb,iCAC0BsB,EAD1B,GAEKpB,GAFL,CAES,QAFT,EAEmB,kBAFnB,EAGKE,GAHL,CAGS,UAACC,GAAD,EAAMC,GAAN,EAAc;AACfZ,MAAAA,MAAM,CAACY,GAAG,CAACC,MAAL,CAAN,CAAmBC,EAAnB,CAAsBC,KAAtB,CAA4B,GAA5B;AACAH,MAAAA,GAAG,CAACI,IAAJ,CAASS,MAAT,CAAgBC,IAAhB,CAAqBC,QAArB,CAA8B,SAA9B,EACKE,GADL,yBAC0BD,EAD1B;AAGH,KARL;;AASAzB,IAAAA,IAAI;AACP,GAZC,CAAF;AAcH,CA9LO,CAAR,C,CAgMA;AACA","sourcesContent":["import chai from 'chai';\nimport chatHttp from 'chai-http'\nimport 'chai/register-should';\nimport app from '../index';\n\nchai.use(chatHttp);\nconst { expect } = chai;\ndescribe('Testing endpoints', () => {\n    it('should add a class ', (done) => {\n        const class_ = {\n            \"classYear\": \"2019\",\n            \"classId\": \"4\",\n            \"classMasterTeacher\": \"Paul\",\n            \"classSection\": \"MPG\",\n            \"classLevel\": \"S4\"\n        };\n        chai.request(app)\n            .post('/api/class')\n            .set('Accept', 'application/json')\n            .send(class_)\n            .end((err, res) => {\n                expect(res.status).to.equal(201);\n                expect(res.body.data).to.include({\n                    classId: class_.classId,\n                    classYear: class_.classYear,\n                    classMasterTeacher: class_.classMasterTeacher,\n                    classSection: class_.classSection,\n                    classLevel: class_.classLevel\n                });\n                done();\n\n            });\n    });\n    it(' should get all classes', (done) => {\n        chai.request(app)\n            .get('/api/class')\n            .set('Accept', 'application/json')\n            .end((err, res) => {\n                expect(res.status).to.equal(200);\n                res.body.data[0].should.have.property('id');\n                res.body.data[0].should.have.property('classYear');\n                res.body.data[0].should.have.property('classId');\n                res.body.data[0].should.have.property('classSection');\n                res.body.data[0].should.have.property('classLevel');\n                res.body.data[0].should.have.property('classMasterTeacher');\n                done();\n            });\n    });\n    it('Should get one class', (done) => {\n        const id = 1;\n        chai.request(app)\n            .get(`/api/class/${id}`)\n            .set('Accept', 'application/json')\n            .end((err, res) => {\n                expect(res.status).to.equal(200);\n                res.body.data.should.have.property('id');\n                res.body.data.should.have.property('classYear');\n                res.body.data.should.have.property('classId');\n                res.body.data.should.have.property('classSection');\n                res.body.data.should.have.property('classLevel');\n                res.body.data.should.have.property('classMasterTeacher');\n                done();\n            });\n    });\n    it('should not get get a class with invalid search parameter', (done) => {\n        const id = \"hgh\";\n        chai.request(app)\n            .get(`/api/class/${id}`)\n            .set('Accept', 'application/json')\n            .end((err, res) => {\n                expect(res.status).to.equal(404);\n                res.body.should.have.property('message')\n                    .eql('Please provide a valid parameter for search');\n                done();\n            });\n    });\n\n    it('should not add a class with incorrect info', (done) => {\n        const class_ = {\n            \"classYear\": \"2019\",\n            \"classMasterTeacher\": \"Paul\",\n            \"classSection\": \"MPG\",\n            \"classLevel\": \"S4\"\n        };\n        chai.request(app)\n            .post('/api/class')\n            .set('Accept', 'application/json')\n            .send(class_)\n            .end((err, res) => {\n                expect(res.status).to.equal(400);\n                res.body.should.have.property('message')\n                    .eql('Please send accurate info')\n                done();\n\n            });\n    });\n    it('should not update a class with invalid search parameter', (done) => {\n        const id = \"48y\";\n        const class_ = {\n            \"classYear\": \"2019\",\n            \"classId\": \"45\",\n            \"classMasterTeacher\": \"Paul\",\n            \"classSection\": \"MPG\",\n            \"classLevel\": \"S4\"\n        };\n        chai.request(app)\n            .put(`/api/class/${id}`)\n            .set('Accept', 'application/json')\n            .send(class_)\n            .end((err, res) => {\n                expect(res.status).to.equal(404);\n                res.body.should.have.property('message')\n                                    .eql('Please provide a valid parameter')\n            });\n        done();\n    });\n    it('should not update a class with invalid empty body', (done) => {\n        const id = 48;\n        const class_ = {\n\n        };\n        chai.request(app)\n            .put(`/api/class/${id}`)\n            .set('Accept', 'application/json')\n            .send(class_)\n            .end((err, res) => {\n                expect(res.status).to.equal(404);\n                res.body.should.have.property('message')\n                                    .eql('sent empty fields')\n            });\n        done();\n    });\n    it('should  update a class with Accurate search parameter', (done) => {\n        const id = 1;\n        const class_ = {\n            \"classYear\": \"2019\",\n            \"classId\": \"35\",\n            \"classMasterTeacher\": \"Paul\",\n            \"classSection\": \"MPG\",\n            \"classLevel\": \"S6\"\n        };\n        chai.request(app)\n            .put(`/api/class/${id}`)\n            .set('Accept', 'application/json')\n            .send(class_)\n            .end((err, res) => {\n                expect(res.status).to.equal(200);\n                res.body.should.have.property('message')\n                                    .eql('Classes updated successfully');\n                expect(res.body.data.classYear).to.equal(class_.classYear);\n                expect(res.body.data.classId).to.equal(class_.classId);\n                expect(res.body.data.classMasterTeacher).to.equal(class_.classMasterTeacher);\n                expect(res.body.data.classSection).to.equal(class_.classSection);\n                expect(res.body.data.classLevel).to.equal(class_.classLevel);\n            });\n        done();\n    });\n    it('should delete a class', (done) => {\n        const id = 1;\n        chai.request(app)\n            .delete(`/api/class/${id}`)\n            .set('Accept', 'application/json')\n            .end((err, res) => {\n                expect(res.status).to.equal(200);\n                res.body.should.have.property('message')\n                                    .eql(`Class with Id ${id} deleted successfully`);\n\n            });\n        done();\n    });\n    it('should not delete a class with invalid search', (done) => {\n        const id = 'dhdh';\n        chai.request(app)\n            .delete(`/api/class/${id}`)\n            .set('Accept', 'application/json')\n            .end((err, res) => {\n                expect(res.status).to.equal(404);\n                res.body.should.have.property('message')\n                                    .eql(`Please provide a valid parameter`);\n\n            });\n        done();\n    });\n    it('should not delete a class with non existing', (done) => {\n        const id = 7;\n        chai.request(app)\n            .delete(`/api/class/${id}`)\n            .set('Accept', 'application/json')\n            .end((err, res) => {\n                expect(res.status).to.equal(404);\n                res.body.should.have.property('message')\n                    .eql(`Class with Id ${id} not found`);\n\n            });\n        done();\n    });\n\n})\n\n//Tests written with chai and mocha packages;\n//each endpoint has atleast 3 states some not every state was tested atleat 2 at each endpoint "],"file":"test.js"}